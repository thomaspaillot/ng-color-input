!function(){"use strict";function o(o,l){function r(){o.$apply(function(){t.selectorVisible=!1}),l.off("click",r)}function e(o){o.stopPropagation(),t.selectorVisible=!0,l.on("click",r)}function n(o){t.color=o}var t=this;t.selectorVisible=!1,t.openSelector=e,t.updateColor=n}function l(o){function l(l){n.onUpdate({color:o(angular.copy(l)).toHex()})}function r(o){o.stopPropagation()}function e(){var o=n.currentColor.h+", "+100*n.currentColor.s+"%, "+100*n.currentColor.l+"%";return{"background-color":"hsl("+o+")"}}var n=this;n.currentColor={h:160,s:1,l:.5,a:1},n.getPreviewStyle=e,n.updateColor=l,n.handleClick=r,n.inputColor&&(n.currentColor=o(angular.copy(n.inputColor)).toHsl())}o.$inject=["$scope","$document"],l.$inject=["tinycolor"],angular.module("ngColorInput",[]).constant("tinycolor",tinycolor),angular.module("ngColorInput").run(["$templateCache",function(o){o.put("colorSelector.html",'<div class="color-selector-popover bottom" ng-click="$ctrl.handleClick($event)" ng-class="{\'is-open\': $ctrl.visible}" ng-show="$ctrl.visible">\n  <div class="arrow"></div>\n  <div class="color-selector-popover-inner">\n    <div class="color-selector-popover-content color-selector">\n      <div class="color-selector-previews">\n        <div class="color-selector-preview" style="background-color:#{{$ctrl.inputColor}}" ng-if="$ctrl.inputColor"></div><!--\n      --><div class="color-selector-preview" ng-style="$ctrl.getPreviewStyle()" ng-if="!$ctrl.inputColor"></div><!--\n      --><div class="color-selector-preview" ng-style="$ctrl.getPreviewStyle()"></div>\n      </div>\n      <div class="color-selector-sliders">\n        <label for="colorHue" class="color-selector-label">Teinte</label>\n        <input name="colorHue" class="color-selector-slider color-selector-slider--hue" ng-change="$ctrl.updateColor($ctrl.currentColor)" ng-model="$ctrl.currentColor.h" type="range" min="0" max="360" step="1">\n        <label for="colorSaturation" class="color-selector-label">Saturation</label>\n        <input name="colorSaturation" class="color-selector-slider color-selector-slider--saturation" ng-change="$ctrl.updateColor($ctrl.currentColor)" ng-model="$ctrl.currentColor.s" type="range" min="0" max="1" step="0.01">\n        <label for="colorLuminosity" class="color-selector-label">Luminosit√©</label>\n        <input name="colorLuminosity" class="color-selector-slider color-selector-slider--luminosity" ng-change="$ctrl.updateColor($ctrl.currentColor)" ng-model="$ctrl.currentColor.l" type="range" min="0" max="1" step="0.01">\n      </div>\n    </div>\n  </div>\n</div>\n'),o.put("index.html",'<!doctype html>\n<html class="no-js" lang="en">\n  <head>\n    <meta charset="utf-8">\n    <title>ngColorInput</title>\n    <meta name="description" content="">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <!-- Place favicon.ico and apple-touch-icon.png in the root directory -->\n\n    <link rel="stylesheet" type="text/css" href="../dist/ngColorInput.min.css">\n\n    <style media="screen">\n      body {\n        font-family: Helvetica, Arial, sans-serif;\n      }\n      .form {\n        width: 250px;\n      }\n    </style>\n  </head>\n  <body ng-app="ngColorInput">\n    <form class="form">\n      <color-input></color-input>\n    </form>\n\n    <script src="../bower_components/angular/angular.js"></script>\n    <script src="../bower_components/tinycolor/tinycolor.js"></script>\n\n    <script src="index.js"></script>\n    <script src="colorInput.js"></script>\n    <script src="colorSelector.js"></script>\n  </body>\n</html>\n')}]);var r={bindings:{color:"=?"},template:['<div class="color-input">','<div class="color-input-prefix">#</div>','<input type="text" class="color-input-field" name="color" ng-click="$ctrl.openSelector($event)" ng-model="$ctrl.color">','<div class="color-input-feedback" ng-class="{\'has-color\': $ctrl.color}" style="background-color:#{{$ctrl.color}}"></div>','<color-selector input-color="$ctrl.color" visible="$ctrl.selectorVisible" on-update="$ctrl.updateColor(color)"></color-selector>',"</div>"].join(""),controller:o};angular.module("ngColorInput").component("colorInput",r);var e={bindings:{inputColor:"<?",visible:"<",onUpdate:"&"},templateUrl:"colorSelector.html",controller:l};angular.module("ngColorInput").component("colorSelector",e)}();